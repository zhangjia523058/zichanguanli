/** Copyright (C) 2015 Baidu, Inc. All Rights Reserved */
package com.baidu.fbu.asset.interceptor;

import java.io.IOException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.converter.HttpMessageNotWritableException;
import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
import org.springframework.http.server.ServletServerHttpResponse;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;
import com.baidu.fbu.common.model.ResultError;
import com.baidu.fbu.common.service.FormatService;

/**  权限拦截器  */
public class PermissionInterceptor implements HandlerInterceptor {
    private static final Logger LOG = LoggerFactory.getLogger(PermissionInterceptor.class);

    @Autowired
    private MappingJackson2HttpMessageConverter converter;

    public boolean preHandle(HttpServletRequest request,
                  HttpServletResponse response, Object handler) throws Exception {
        
        return true;
    }

    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
            ModelAndView modelAndView) throws Exception {

    }

    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)
            throws Exception {

    }

    /**
     * 错误处理.
     * 
     * @param response 响应
     * @param errorCode 错误号
     * @param errorMsg 错误信息
     */
    private void fail(HttpServletResponse response, int errorCode, String errorMsg) {
        try {
            LOG.error(FormatService.logFormat("PermissionFail: errorCode=" + errorCode + ", errorMsg=" + errorMsg));
            response.setCharacterEncoding("UTF-8");
            response.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());
            converter.write(new ResultError(errorCode, errorMsg), MediaType.APPLICATION_JSON,
                    new ServletServerHttpResponse(response));
        } catch (HttpMessageNotWritableException e) {
            LOG.error(FormatService.logFormat("ajax error"), e);
        } catch (IOException e) {
            LOG.error(FormatService.logFormat("ajax error"), e);
        }
    }

}